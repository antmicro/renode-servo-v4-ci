name: Build and run Chrome OS Servo v4
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      BOARD:  servo_v4
      EC_REV: ab6a9a4
      GCC_ARM_PREFIX: gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y gawk gcc git make libftdi1-dev pkg-config libusb-dev wget

      - name: Install toolchain
        run: |
          wget -nv -O - 'https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2?revision=ca0cbf9c-9de2-491c-ac48-898b5bbc0443&hash=3710A129B3F3955AFDC7A74934A611E6C7F218AE' | tar xj
          ls -l $GITHUB_WORKSPACE/${GCC_ARM_PREFIX}*

      - name: Build Servo V4 firmware
        run: |
          git clone https://chromium.googlesource.com/chromiumos/platform/ec
          cd ec
          git checkout ${EC_REV}
          if ls $GITHUB_WORKSPACE/*.patch; then for PATCH in $GITHUB_WORKSPACE/*.patch; do git apply $PATCH; done; fi
          CROSS_COMPILE_arm=$GITHUB_WORKSPACE/${GCC_ARM_PREFIX} make BOARD=servo_v4
          cp $GITHUB_WORKSPACE/ec/build/servo_v4/{ec.obj,RW/ec.RW.elf,RO/ec.RO.elf} $GITHUB_WORKSPACE

      - name: Test in Renode
        uses: antmicro/renode-test-action@v1.0.0
        with:
          renode-version: '1.12.0+20210804git4959686a'
          tests-to-run: 'renode/servo-v4.robot'

      - name: Archive results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-results
          path: |
            report.html
            log.html
            robot_output.xml
            logs/*
            snapshots/*

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-artifacts
          path: |
            ec.obj
            ec.RW.elf
            ec.RO.elf

